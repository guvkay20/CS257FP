Now, the point of the previous tests was to prove that we can have two pointers which have equal addresses, yet are not "considered equal" by the compiler. It would be a shame if the things we did to set up the equality failed to properly guarantee that address(p) == address(q). Therefore, we will verify it is impossible to _not_ have this.

From 2-1:

We assert:
address(p) != 0
address(p_to_b) != 0

q == p_to_b +p -1  # q = &b - 1
address(p_to_b) == address(p) + 8  # b's location in memory is immediately after a's (This ensures address(p) == address(q).)

address(p) != address(q)

Expect: unsat