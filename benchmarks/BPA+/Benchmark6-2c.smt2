(set-info :smt-lib-version 2.6)
(set-option :produce-assignments true)
(set-logic BPA+)
(set-info :source | Kaya Guvendi and Ethan Bogle |)
(set-info :category "crafted")
(set-info :status unsat)
(declare-const arr Pointer)
(declare-const i0 Pointer)
(declare-const i1 Pointer)
(declare-const i2 Pointer)
(declare-const i3 Pointer)
(declare-const i4 Pointer)
(declare-const i5 Pointer)
(declare-const i6 Pointer)
(declare-const i7 Pointer)
(declare-const i8 Pointer)
(declare-const i9 Pointer)
(declare-const i10 Pointer)
(declare-const i11 Pointer)
(declare-const i12 Pointer)
(declare-const i13 Pointer)
(declare-const i14 Pointer)
(declare-const i15 Pointer)
(declare-const i16 Pointer)
(declare-const i17 Pointer)
(declare-const i18 Pointer)
(declare-const i19 Pointer)
(declare-const i20 Pointer)
(declare-const i21 Pointer)
(declare-const i22 Pointer)
(declare-const i23 Pointer)
(declare-const i24 Pointer)
(declare-const i25 Pointer)
(declare-const i26 Pointer)
(declare-const i27 Pointer)
(declare-const i28 Pointer)
(declare-const i29 Pointer)
(declare-const i30 Pointer)
(declare-const i31 Pointer)
(declare-const i32 Pointer)
(declare-const i33 Pointer)
(declare-const i34 Pointer)
(declare-const i35 Pointer)
(declare-const i36 Pointer)
(declare-const i37 Pointer)
(declare-const i38 Pointer)
(declare-const i39 Pointer)
(declare-const i40 Pointer)
(declare-const i41 Pointer)
(declare-const i42 Pointer)
(declare-const i43 Pointer)
(declare-const i44 Pointer)
(declare-const i45 Pointer)
(declare-const i46 Pointer)
(declare-const i47 Pointer)
(declare-const i48 Pointer)
(declare-const i49 Pointer)
(declare-const i50 Pointer)
(declare-const i51 Pointer)
(declare-const i52 Pointer)
(declare-const i53 Pointer)
(declare-const i54 Pointer)
(declare-const i55 Pointer)
(declare-const i56 Pointer)
(declare-const i57 Pointer)
(declare-const i58 Pointer)
(declare-const i59 Pointer)
(declare-const i60 Pointer)
(declare-const i61 Pointer)
(declare-const i62 Pointer)
(declare-const i63 Pointer)
(declare-const i64 Pointer)
(declare-const i65 Pointer)
(declare-const i66 Pointer)
(declare-const i67 Pointer)
(declare-const i68 Pointer)
(declare-const i69 Pointer)
(declare-const i70 Pointer)
(declare-const i71 Pointer)
(declare-const i72 Pointer)
(declare-const i73 Pointer)
(declare-const i74 Pointer)
(declare-const i75 Pointer)
(declare-const i76 Pointer)
(declare-const i77 Pointer)
(declare-const i78 Pointer)
(declare-const i79 Pointer)
(declare-const i80 Pointer)
(declare-const i81 Pointer)
(declare-const i82 Pointer)
(declare-const i83 Pointer)
(declare-const i84 Pointer)
(declare-const i85 Pointer)
(declare-const i86 Pointer)
(declare-const i87 Pointer)
(declare-const i88 Pointer)
(declare-const i89 Pointer)
(declare-const i90 Pointer)
(declare-const i91 Pointer)
(declare-const i92 Pointer)
(declare-const i93 Pointer)
(declare-const i94 Pointer)
(declare-const i95 Pointer)
(declare-const i96 Pointer)
(declare-const i97 Pointer)
(declare-const i98 Pointer)
(declare-const i99 Pointer)
(declare-const i100 Pointer)
(assert (not (= (+ (Base (Block i0)) (Offset i0)) 0)))
(assert (not (= (+ (Base (Block i1)) (Offset i1)) 0)))
(assert (not (= (+ (Base (Block i2)) (Offset i2)) 0)))
(assert (not (= (+ (Base (Block i3)) (Offset i3)) 0)))
(assert (not (= (+ (Base (Block i4)) (Offset i4)) 0)))
(assert (not (= (+ (Base (Block i5)) (Offset i5)) 0)))
(assert (not (= (+ (Base (Block i6)) (Offset i6)) 0)))
(assert (not (= (+ (Base (Block i7)) (Offset i7)) 0)))
(assert (not (= (+ (Base (Block i8)) (Offset i8)) 0)))
(assert (not (= (+ (Base (Block i9)) (Offset i9)) 0)))
(assert (not (= (+ (Base (Block i10)) (Offset i10)) 0)))
(assert (not (= (+ (Base (Block i11)) (Offset i11)) 0)))
(assert (not (= (+ (Base (Block i12)) (Offset i12)) 0)))
(assert (not (= (+ (Base (Block i13)) (Offset i13)) 0)))
(assert (not (= (+ (Base (Block i14)) (Offset i14)) 0)))
(assert (not (= (+ (Base (Block i15)) (Offset i15)) 0)))
(assert (not (= (+ (Base (Block i16)) (Offset i16)) 0)))
(assert (not (= (+ (Base (Block i17)) (Offset i17)) 0)))
(assert (not (= (+ (Base (Block i18)) (Offset i18)) 0)))
(assert (not (= (+ (Base (Block i19)) (Offset i19)) 0)))
(assert (not (= (+ (Base (Block i20)) (Offset i20)) 0)))
(assert (not (= (+ (Base (Block i21)) (Offset i21)) 0)))
(assert (not (= (+ (Base (Block i22)) (Offset i22)) 0)))
(assert (not (= (+ (Base (Block i23)) (Offset i23)) 0)))
(assert (not (= (+ (Base (Block i24)) (Offset i24)) 0)))
(assert (not (= (+ (Base (Block i25)) (Offset i25)) 0)))
(assert (not (= (+ (Base (Block i26)) (Offset i26)) 0)))
(assert (not (= (+ (Base (Block i27)) (Offset i27)) 0)))
(assert (not (= (+ (Base (Block i28)) (Offset i28)) 0)))
(assert (not (= (+ (Base (Block i29)) (Offset i29)) 0)))
(assert (not (= (+ (Base (Block i30)) (Offset i30)) 0)))
(assert (not (= (+ (Base (Block i31)) (Offset i31)) 0)))
(assert (not (= (+ (Base (Block i32)) (Offset i32)) 0)))
(assert (not (= (+ (Base (Block i33)) (Offset i33)) 0)))
(assert (not (= (+ (Base (Block i34)) (Offset i34)) 0)))
(assert (not (= (+ (Base (Block i35)) (Offset i35)) 0)))
(assert (not (= (+ (Base (Block i36)) (Offset i36)) 0)))
(assert (not (= (+ (Base (Block i37)) (Offset i37)) 0)))
(assert (not (= (+ (Base (Block i38)) (Offset i38)) 0)))
(assert (not (= (+ (Base (Block i39)) (Offset i39)) 0)))
(assert (not (= (+ (Base (Block i40)) (Offset i40)) 0)))
(assert (not (= (+ (Base (Block i41)) (Offset i41)) 0)))
(assert (not (= (+ (Base (Block i42)) (Offset i42)) 0)))
(assert (not (= (+ (Base (Block i43)) (Offset i43)) 0)))
(assert (not (= (+ (Base (Block i44)) (Offset i44)) 0)))
(assert (not (= (+ (Base (Block i45)) (Offset i45)) 0)))
(assert (not (= (+ (Base (Block i46)) (Offset i46)) 0)))
(assert (not (= (+ (Base (Block i47)) (Offset i47)) 0)))
(assert (not (= (+ (Base (Block i48)) (Offset i48)) 0)))
(assert (not (= (+ (Base (Block i49)) (Offset i49)) 0)))
(assert (not (= (+ (Base (Block i50)) (Offset i50)) 0)))
(assert (not (= (+ (Base (Block i51)) (Offset i51)) 0)))
(assert (not (= (+ (Base (Block i52)) (Offset i52)) 0)))
(assert (not (= (+ (Base (Block i53)) (Offset i53)) 0)))
(assert (not (= (+ (Base (Block i54)) (Offset i54)) 0)))
(assert (not (= (+ (Base (Block i55)) (Offset i55)) 0)))
(assert (not (= (+ (Base (Block i56)) (Offset i56)) 0)))
(assert (not (= (+ (Base (Block i57)) (Offset i57)) 0)))
(assert (not (= (+ (Base (Block i58)) (Offset i58)) 0)))
(assert (not (= (+ (Base (Block i59)) (Offset i59)) 0)))
(assert (not (= (+ (Base (Block i60)) (Offset i60)) 0)))
(assert (not (= (+ (Base (Block i61)) (Offset i61)) 0)))
(assert (not (= (+ (Base (Block i62)) (Offset i62)) 0)))
(assert (not (= (+ (Base (Block i63)) (Offset i63)) 0)))
(assert (not (= (+ (Base (Block i64)) (Offset i64)) 0)))
(assert (not (= (+ (Base (Block i65)) (Offset i65)) 0)))
(assert (not (= (+ (Base (Block i66)) (Offset i66)) 0)))
(assert (not (= (+ (Base (Block i67)) (Offset i67)) 0)))
(assert (not (= (+ (Base (Block i68)) (Offset i68)) 0)))
(assert (not (= (+ (Base (Block i69)) (Offset i69)) 0)))
(assert (not (= (+ (Base (Block i70)) (Offset i70)) 0)))
(assert (not (= (+ (Base (Block i71)) (Offset i71)) 0)))
(assert (not (= (+ (Base (Block i72)) (Offset i72)) 0)))
(assert (not (= (+ (Base (Block i73)) (Offset i73)) 0)))
(assert (not (= (+ (Base (Block i74)) (Offset i74)) 0)))
(assert (not (= (+ (Base (Block i75)) (Offset i75)) 0)))
(assert (not (= (+ (Base (Block i76)) (Offset i76)) 0)))
(assert (not (= (+ (Base (Block i77)) (Offset i77)) 0)))
(assert (not (= (+ (Base (Block i78)) (Offset i78)) 0)))
(assert (not (= (+ (Base (Block i79)) (Offset i79)) 0)))
(assert (not (= (+ (Base (Block i80)) (Offset i80)) 0)))
(assert (not (= (+ (Base (Block i81)) (Offset i81)) 0)))
(assert (not (= (+ (Base (Block i82)) (Offset i82)) 0)))
(assert (not (= (+ (Base (Block i83)) (Offset i83)) 0)))
(assert (not (= (+ (Base (Block i84)) (Offset i84)) 0)))
(assert (not (= (+ (Base (Block i85)) (Offset i85)) 0)))
(assert (not (= (+ (Base (Block i86)) (Offset i86)) 0)))
(assert (not (= (+ (Base (Block i87)) (Offset i87)) 0)))
(assert (not (= (+ (Base (Block i88)) (Offset i88)) 0)))
(assert (not (= (+ (Base (Block i89)) (Offset i89)) 0)))
(assert (not (= (+ (Base (Block i90)) (Offset i90)) 0)))
(assert (not (= (+ (Base (Block i91)) (Offset i91)) 0)))
(assert (not (= (+ (Base (Block i92)) (Offset i92)) 0)))
(assert (not (= (+ (Base (Block i93)) (Offset i93)) 0)))
(assert (not (= (+ (Base (Block i94)) (Offset i94)) 0)))
(assert (not (= (+ (Base (Block i95)) (Offset i95)) 0)))
(assert (not (= (+ (Base (Block i96)) (Offset i96)) 0)))
(assert (not (= (+ (Base (Block i97)) (Offset i97)) 0)))
(assert (not (= (+ (Base (Block i98)) (Offset i98)) 0)))
(assert (not (= (+ (Base (Block i99)) (Offset i99)) 0)))
(assert (not (= (+ (Base (Block i100)) (Offset i100)) 0)))
(assert (=p i0 arr))
(assert (=p i1 (+p i0 1)))
(assert (=p i2 (+p i1 1)))
(assert (=p i3 (+p i2 1)))
(assert (=p i4 (+p i3 1)))
(assert (=p i5 (+p i4 1)))
(assert (=p i6 (+p i5 1)))
(assert (=p i7 (+p i6 1)))
(assert (=p i8 (+p i7 1)))
(assert (=p i9 (+p i8 1)))
(assert (=p i10 (+p i9 1)))
(assert (=p i11 (+p i10 1)))
(assert (=p i12 (+p i11 1)))
(assert (=p i13 (+p i12 1)))
(assert (=p i14 (+p i13 1)))
(assert (=p i15 (+p i14 1)))
(assert (=p i16 (+p i15 1)))
(assert (=p i17 (+p i16 1)))
(assert (=p i18 (+p i17 1)))
(assert (=p i19 (+p i18 1)))
(assert (=p i20 (+p i19 1)))
(assert (=p i21 (+p i20 1)))
(assert (=p i22 (+p i21 1)))
(assert (=p i23 (+p i22 1)))
(assert (=p i24 (+p i23 1)))
(assert (=p i25 (+p i24 1)))
(assert (=p i26 (+p i25 1)))
(assert (=p i27 (+p i26 1)))
(assert (=p i28 (+p i27 1)))
(assert (=p i29 (+p i28 1)))
(assert (=p i30 (+p i29 1)))
(assert (=p i31 (+p i30 1)))
(assert (=p i32 (+p i31 1)))
(assert (=p i33 (+p i32 1)))
(assert (=p i34 (+p i33 1)))
(assert (=p i35 (+p i34 1)))
(assert (=p i36 (+p i35 1)))
(assert (=p i37 (+p i36 1)))
(assert (=p i38 (+p i37 1)))
(assert (=p i39 (+p i38 1)))
(assert (=p i40 (+p i39 1)))
(assert (=p i41 (+p i40 1)))
(assert (=p i42 (+p i41 1)))
(assert (=p i43 (+p i42 1)))
(assert (=p i44 (+p i43 1)))
(assert (=p i45 (+p i44 1)))
(assert (=p i46 (+p i45 1)))
(assert (=p i47 (+p i46 1)))
(assert (=p i48 (+p i47 1)))
(assert (=p i49 (+p i48 1)))
(assert (=p i50 (+p i49 1)))
(assert (=p i51 (+p i50 1)))
(assert (=p i52 (+p i51 1)))
(assert (=p i53 (+p i52 1)))
(assert (=p i54 (+p i53 1)))
(assert (=p i55 (+p i54 1)))
(assert (=p i56 (+p i55 1)))
(assert (=p i57 (+p i56 1)))
(assert (=p i58 (+p i57 1)))
(assert (=p i59 (+p i58 1)))
(assert (=p i60 (+p i59 1)))
(assert (=p i61 (+p i60 1)))
(assert (=p i62 (+p i61 1)))
(assert (=p i63 (+p i62 1)))
(assert (=p i64 (+p i63 1)))
(assert (=p i65 (+p i64 1)))
(assert (=p i66 (+p i65 1)))
(assert (=p i67 (+p i66 1)))
(assert (=p i68 (+p i67 1)))
(assert (=p i69 (+p i68 1)))
(assert (=p i70 (+p i69 1)))
(assert (=p i71 (+p i70 1)))
(assert (=p i72 (+p i71 1)))
(assert (=p i73 (+p i72 1)))
(assert (=p i74 (+p i73 1)))
(assert (=p i75 (+p i74 1)))
(assert (=p i76 (+p i75 1)))
(assert (=p i77 (+p i76 1)))
(assert (=p i78 (+p i77 1)))
(assert (=p i79 (+p i78 1)))
(assert (=p i80 (+p i79 1)))
(assert (=p i81 (+p i80 1)))
(assert (=p i82 (+p i81 1)))
(assert (=p i83 (+p i82 1)))
(assert (=p i84 (+p i83 1)))
(assert (=p i85 (+p i84 1)))
(assert (=p i86 (+p i85 1)))
(assert (=p i87 (+p i86 1)))
(assert (=p i88 (+p i87 1)))
(assert (=p i89 (+p i88 1)))
(assert (=p i90 (+p i89 1)))
(assert (=p i91 (+p i90 1)))
(assert (=p i92 (+p i91 1)))
(assert (=p i93 (+p i92 1)))
(assert (=p i94 (+p i93 1)))
(assert (=p i95 (+p i94 1)))
(assert (=p i96 (+p i95 1)))
(assert (=p i97 (+p i96 1)))
(assert (=p i98 (+p i97 1)))
(assert (=p i99 (+p i98 1)))
(assert (=p i100 (+p i99 1)))
(assert (not (and (<=p i0 (+p arr 59)) (<=p i1 (+p arr 59)) (<=p i2 (+p arr 59)) (<=p i3 (+p arr 59)) (<=p i4 (+p arr 59)) (<=p i5 (+p arr 59)) (<=p i6 (+p arr 59)) (<=p i7 (+p arr 59)) (<=p i8 (+p arr 59)) (<=p i9 (+p arr 59)) (<=p i10 (+p arr 59)) (<=p i11 (+p arr 59)) (<=p i12 (+p arr 59)) (<=p i13 (+p arr 59)) (<=p i14 (+p arr 59)) (<=p i15 (+p arr 59)) (<=p i16 (+p arr 59)) (<=p i17 (+p arr 59)) (<=p i18 (+p arr 59)) (<=p i19 (+p arr 59)) (<=p i20 (+p arr 59)) (<=p i21 (+p arr 59)) (<=p i22 (+p arr 59)) (<=p i23 (+p arr 59)) (<=p i24 (+p arr 59)) (<=p i25 (+p arr 59)) (<=p i26 (+p arr 59)) (<=p i27 (+p arr 59)) (<=p i28 (+p arr 59)) (<=p i29 (+p arr 59)) (<=p i30 (+p arr 59)) (<=p i31 (+p arr 59)) (<=p i32 (+p arr 59)) (<=p i33 (+p arr 59)) (<=p i34 (+p arr 59)) (<=p i35 (+p arr 59)) (<=p i36 (+p arr 59)) (<=p i37 (+p arr 59)) (<=p i38 (+p arr 59)) (<=p i39 (+p arr 59)) (<=p i40 (+p arr 59)) (<=p i41 (+p arr 59)) (<=p i42 (+p arr 59)) (<=p i43 (+p arr 59)) (<=p i44 (+p arr 59)) (<=p i45 (+p arr 59)) (<=p i46 (+p arr 59)) (<=p i47 (+p arr 59)) (<=p i48 (+p arr 59)) (<=p i49 (+p arr 59)) (<=p i50 (+p arr 59)) (<=p i51 (+p arr 59)) (<=p i52 (+p arr 59)) (<=p i53 (+p arr 59)) (<=p i54 (+p arr 59)) (<=p i55 (+p arr 59)) (<=p i56 (+p arr 59)) (<=p i57 (+p arr 59)) (<=p i58 (+p arr 59)) (<=p i59 (+p arr 59)))))
(assert (<= (+ (+ (Base (Block arr)) (Offset arr)) (* 8 60)) 512))
(check-sat)
(exit)